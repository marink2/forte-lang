{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Forte Input",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#number"
		},
		{
			"include": "#function"
		},
		{
			"include": "#variable-assignment"
		},
		{
			"include": "#irreps"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.operator.new.dat",
					"match": "\\b(molecule|set)\\b[^\\{]*\\{"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.dat",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.dat",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.dat",
					"begin": "(?<!\\w)'",
					"end": "'(?!\\w)",
					"patterns": [
						{
							"name": "constant.character.escape.dat",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"constant": {
			"name": "constant.language.dat",
			"match": "\\b(?:True|False)\\b"
		},
		"number": {
			"name": "constant.numeric.dat",
			"match": "(?x) \\b -? (?: [0-9] \\d*    (?: [eE] [+-]? \\d+ )?   ) (?: \\. \\d+    (?: [eE] [+-]? \\d+ )?    )? \\b"
		},
		"comments": {
			"patterns": [
				{
					"name": "constant.language.dat",
					"begin": "==>",
					"end": "<==",
					"captures": {
						"0": {
							"name": "constant.language.dat"
						}
					}
				},
				{
					"name": "comment.line.number-sign.dat",
					"match": "(#).*$\\n?",
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.dat"
						}
					}
				}
			]
		},
		"function": {
			"patterns": [
				{
					"name": "keyword.function.dat",
					"match": "(energy|freq|optimize)\\s*\\(",
					"captures": {
						"1": {
							"name": "entity.name.function.dat"
						}
					}
				},
				{
					"name": "variable.parameter.dat",
					"match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b(?=\\s*=|\\s*\\))"
				}
			]
		},
		"variable-assignment": {
			"name": "variable.parameter.dat",
			"match": "\\b(\\w+\\s*,\\s*)*\\w+\\b(?=\\s*=)"
		},
		"irreps": {
			"name": "constant.character.escape.dat",
			"match": "\\b(\\d+)?([AB][1-3]|[A][GgUu]|[B][1-3][GgUu]|[A][Pp]{1,2})\\b",
			"captures": {
				"1": {
					"name": "invalid.dat"
				},
				"2": {
					"name": "invalid.dat"
				}
			}
		}
	},
	"scopeName": "source.python.dat"
}